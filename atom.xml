<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hello World!</title>
  
  <subtitle>I want to know you more</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://linchunliangliang.github.io/"/>
  <updated>2019-04-23T09:15:25.383Z</updated>
  <id>https://linchunliangliang.github.io/</id>
  
  <author>
    <name>Shawn Lin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://linchunliangliang.github.io/2019/04/23/Ajax/"/>
    <id>https://linchunliangliang.github.io/2019/04/23/Ajax/</id>
    <published>2019-04-23T08:04:58.488Z</published>
    <updated>2019-04-23T09:15:25.383Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Ajax学习总结"><a href="#Ajax学习总结" class="headerlink" title="Ajax学习总结"></a>Ajax学习总结</h1><p>##简介</p><p>​    ajax是一种保障网页数据实时性的技术，意思是数据从服务端产生的，并且不刷新的情况下可以更新数据。</p><p>ajax（asynchronous javascript and xml）</p><h2 id="使用Ajax五步走"><a href="#使用Ajax五步走" class="headerlink" title="使用Ajax五步走"></a>使用Ajax五步走</h2><h3 id="第一步：创建ajax对象"><a href="#第一步：创建ajax对象" class="headerlink" title="第一步：创建ajax对象"></a>第一步：创建ajax对象</h3><p>创建ajax对象时，会存在兼容两个内核版本（IE内核，W3C内核）的不同，导致两个创建ajax不一样</p><p>IE内核：<code>new ActiveXObject()</code></p><p>W3C内核：<code>new XMLHttpRequest()</code></p><p>由于两个版本的不同，所以我们需要封装一个新的，解决兼容性问题</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createAjax</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="comment">//尝试创建IE内核的ajax对象</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> ActiveXObject(<span class="string">"Microsoft.XMLHTTP"</span>)</span><br><span class="line">            &#125; <span class="keyword">catch</span> (error) &#123;&#125;</span><br><span class="line">            <span class="comment">//再次尝试创建W3C内核的ajax对象</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> XMLHttpRequest()</span><br><span class="line">            &#125; <span class="keyword">catch</span> (error) &#123;&#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>使用时直接调用</p><p><code>var ajax=crearAjax()</code></p><h3 id="第二步：初始化设置"><a href="#第二步：初始化设置" class="headerlink" title="第二步：初始化设置"></a>第二步：初始化设置</h3><p><code>ajax.open(&#39;get&#39;,&#39;http://locallhost:3000&#39;)</code></p><p>这里的请求方式有两种，get和post</p><p>不同点：</p><ol><li>数据位置不同</li><li>post有特有的请求头，所以使用时需要设置<code>ajax.setRequestHeader(&quot;Content-type&quot;,&quot;application/x-www-form-urlencoded&quot;)</code></li><li>post请求数据不会出现在URL中，是通过send方法中，get请求的数据会出现在URL中</li></ol><h3 id="发送请求"><a href="#发送请求" class="headerlink" title="发送请求"></a>发送请求</h3><p><code>ajax.send(null)</code></p><h3 id="接收响应"><a href="#接收响应" class="headerlink" title="接收响应"></a>接收响应</h3><p>ajax的通信状态码<code>ajax.readyState</code>，状态码总共5种</p><ol><li>0:创建ajax对象，还未初始化调用了creatAjax方法，还未调用open</li><li>1:进行了初始化设置，还未发送请求，调用了open还未调用send</li><li>2:发送了请求，还未收到任何响应，调用了send还未收到任何响应</li><li>3：开始收到响应，响应还未接收完毕</li><li>4:响应接收完毕</li></ol><p>HTTP响应状态码<code>ajax.status</code></p><ol><li>200 成功</li><li>304 延用缓存</li><li>404 页面未找到</li><li>500 服务器内部错误</li></ol><h3 id="使用响应数据"><a href="#使用响应数据" class="headerlink" title="使用响应数据"></a>使用响应数据</h3><p>响应的数据会存在responseText中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//第四步</span></span><br><span class="line">ajax.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(ajax.status==<span class="number">200</span> &amp;&amp; ajax.readyState==<span class="number">4</span>)&#123;</span><br><span class="line">                <span class="comment">//第5步:使用响应数据</span></span><br><span class="line">                <span class="comment">// console.log(ajax.responseText)</span></span><br><span class="line"></span><br><span class="line">                <span class="built_in">document</span>.getElementsByTagName(<span class="string">'span'</span>)[<span class="number">0</span>].innerHTML=ajax.responseText</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h2 id="前后端交互注意事项"><a href="#前后端交互注意事项" class="headerlink" title="前后端交互注意事项"></a>前后端交互注意事项</h2><p>后端响应必须传入字符串，二进制数据（需要转化），json格式数据，xml数据格式</p><h2 id="IE存在缓存问题"><a href="#IE存在缓存问题" class="headerlink" title="IE存在缓存问题"></a>IE存在缓存问题</h2><p>解决办法：</p><ol><li>可以在请求地址中加随机数 Math.random() [0,1)</li><li>可以在请求地址中加时间戳/毫秒数 (new Date).getTime()</li><li>通过设置请求头 禁止在浏览器产生缓存<br>ajax.setRequestHeader(“If-Modified-Since”,”0”)<br>强制让所有的缓存过期 浏览器必须从服务器上读取真实资源</li></ol><h2 id="跨域访问"><a href="#跨域访问" class="headerlink" title="跨域访问"></a>跨域访问</h2><p>解决的问题是，一个网站（网站A）向另外一个网站（网站B）发送请求时，网站B会拒绝网站A的请求，因为这里发生了跨域请求，当发生跨域请求时，浏览器会报错</p><h3 id="JSONP跨域"><a href="#JSONP跨域" class="headerlink" title="JSONP跨域"></a>JSONP跨域</h3><p>JSONP跨域技术主要是利用script标签发起的请求不受同源策略限制的这个漏洞</p><p>步骤</p><ol><li><p>搭建好通信渠道，避开同源策略</p><p>在服务器a中设置</p><p><code>&lt;script src=&#39;http://www.b.com:4000&#39;&gt;&lt;/script&gt;</code></p></li><li><p>b服务器负责提供数据</p><p>json的请求一定是符合js‘语法的响应字符串</p></li><li><p>实现a自由使用数据</p></li><li><p>解决b服务器函数名固定不变的问题</p><p>在访问b服务器的src中，带一个回调函数进行访问</p><p><code>&lt;script src=&#39;http://www.b.com:4000?callback=useData&#39;&gt;&lt;/script&gt;</code></p></li></ol><h3 id="CORS跨域"><a href="#CORS跨域" class="headerlink" title="CORS跨域"></a>CORS跨域</h3><p>通过服务端设置响应头方式解决跨域需求(Access-Control-Allow-Origin)</p><p>B服务器可以设置说明</p><ol><li><p>允许任意源前来访问</p><p><code>Access-Control-Allow-Origin:*</code></p></li><li><p>代表允许<a href="http://www.a.com前来访问" target="_blank" rel="noopener">http://www.a.com前来访问</a></p><p><code>Access-Control-Allow-Origin:http://www.a.com</code></p></li></ol><p><u>当设置CORS头之前，需要排除之前解决缓存问题设置的if-modified-since的值，避免冲突</u></p><h2 id="例子：利用Ajax实现省市二级联动"><a href="#例子：利用Ajax实现省市二级联动" class="headerlink" title="例子：利用Ajax实现省市二级联动"></a>例子：利用Ajax实现省市二级联动</h2><p>该例子中没有用到跨域技术</p><p>客户端代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">content</span>=<span class="string">"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"jquery-3.3.1.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="comment">//封装创建ajax对象</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">creatAjax</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">try</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> <span class="keyword">new</span> ActiveXObject(<span class="string">'Microsoft.XMLHTTP'</span>)</span></span><br><span class="line"><span class="javascript">            &#125;<span class="keyword">catch</span> (error) &#123;&#125;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">try</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> <span class="keyword">new</span> XMLHttpRequest()</span></span><br><span class="line"><span class="javascript">            &#125;<span class="keyword">catch</span> (error) &#123;&#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="javascript">        $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//创建ajax对象</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> ajax=creatAjax()</span></span><br><span class="line"><span class="javascript">            <span class="comment">//初始化设置</span></span></span><br><span class="line"><span class="javascript">            ajax.open(<span class="string">'get'</span>,<span class="string">'http://localhost:3000/province'</span>)</span></span><br><span class="line"><span class="javascript">            <span class="comment">//发送请求</span></span></span><br><span class="line"><span class="javascript">            ajax.send(<span class="literal">null</span>)</span></span><br><span class="line"><span class="javascript">            <span class="comment">//接收响应</span></span></span><br><span class="line"><span class="javascript">            ajax.onreadystatechange=<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">// console.log(ajax.responseText)</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span>(ajax.status==<span class="number">200</span> &amp;&amp;ajax.readyState==<span class="number">4</span>)&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="comment">//使用响应数据</span></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> data = <span class="built_in">JSON</span>.parse(ajax.responseText)</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">for</span>(<span class="keyword">var</span> i <span class="keyword">of</span> data)&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="comment">//创建选项元素 option</span></span></span><br><span class="line"><span class="javascript">                        $(<span class="string">`&lt;option value="<span class="subst">$&#123;i&#125;</span>"&gt;<span class="subst">$&#123;i&#125;</span>&lt;/option&gt;`</span>)</span></span><br><span class="line"><span class="javascript">                        <span class="comment">//把新选项追加到省级下拉列表中</span></span></span><br><span class="line"><span class="javascript">                            .appendTo(<span class="string">"#province"</span>)</span></span><br><span class="line"><span class="undefined">                    &#125;</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//给省级 下拉选框 绑定 change 事件 根据当前省 发起请求 获取对应的市</span></span></span><br><span class="line"><span class="javascript">            $(<span class="string">"#province"</span>).change(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> ajax=creatAjax()</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                ajax.open(<span class="string">'get'</span>,<span class="string">'http://localhost:3000/city?province='</span>+$(<span class="keyword">this</span>).val())</span></span><br><span class="line"><span class="javascript">                ajax.send(<span class="literal">null</span>)</span></span><br><span class="line"><span class="javascript">                ajax.onreadystatechange=<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">if</span>(ajax.status==<span class="number">200</span>&amp;&amp;ajax.readyState==<span class="number">4</span>)&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="comment">//使用响应数据</span></span></span><br><span class="line"><span class="javascript">                        <span class="built_in">console</span>.log(<span class="built_in">JSON</span>.parse(ajax.responseText))</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">var</span> json=<span class="built_in">JSON</span>.parse(ajax.responseText)</span></span><br><span class="line"><span class="javascript">                        <span class="comment">//清空旧选项</span></span></span><br><span class="line"><span class="javascript">                        $(<span class="string">'#city'</span>).empty()</span></span><br><span class="line"><span class="javascript">                        <span class="comment">//遍历市级数据，产生市级选项</span></span></span><br><span class="line"><span class="javascript">                        <span class="keyword">for</span>(<span class="keyword">var</span> i <span class="keyword">of</span> json)</span></span><br><span class="line"><span class="javascript">                            <span class="comment">//创建选项元素</span></span></span><br><span class="line"><span class="javascript">                            $(<span class="string">`&lt;option value="<span class="subst">$&#123;i&#125;</span>"&gt;<span class="subst">$&#123;i&#125;</span>&lt;/option&gt;&gt;`</span>)</span></span><br><span class="line"><span class="javascript">                                <span class="comment">//追加到下拉选项中</span></span></span><br><span class="line"><span class="javascript">                                .appendTo(<span class="string">"#city"</span>)</span></span><br><span class="line"><span class="undefined">                    &#125;</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">            &#125;)</span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    省：<span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">"province"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">""</span> <span class="attr">disabled</span> <span class="attr">selected</span>&gt;</span>请选择省<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    市：<span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">"city"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span>请选择市<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>服务端代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//导入所需核心模块</span></span><br><span class="line"><span class="keyword">var</span> http=<span class="built_in">require</span>(<span class="string">'http'</span>),</span><br><span class="line">fs=<span class="built_in">require</span>(<span class="string">'fs'</span>),</span><br><span class="line">url=<span class="built_in">require</span>(<span class="string">'url'</span>),</span><br><span class="line">querystring=<span class="built_in">require</span>(<span class="string">'querystring'</span>),</span><br><span class="line">path=<span class="built_in">require</span>(<span class="string">'path'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//导入自定义模块</span></span><br><span class="line"><span class="keyword">var</span> mime = <span class="built_in">require</span>(<span class="string">'./mime'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//导入第三方模块</span></span><br><span class="line"><span class="keyword">var</span> tpl = <span class="built_in">require</span>(<span class="string">'art-template'</span>)</span><br><span class="line"><span class="keyword">var</span> moment = <span class="built_in">require</span>(<span class="string">'moment'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建服务</span></span><br><span class="line">http.createServer().on(<span class="string">'request'</span>,(req,res)=&gt;&#123;</span><br><span class="line">    <span class="comment">//解析URL请求路径</span></span><br><span class="line">    <span class="keyword">var</span> urlInfo = url.parse(req.url,<span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据后缀 判断请求意图</span></span><br><span class="line">    <span class="keyword">if</span>(path.extname(urlInfo.pathname)!=<span class="string">''</span>)&#123;</span><br><span class="line">        <span class="comment">//请求有后缀 静态资源请求</span></span><br><span class="line">        <span class="comment">//根据用户请求路径 拼接出 静态资源文件的磁盘路径</span></span><br><span class="line">        <span class="keyword">var</span> file = path.join(__dirname,<span class="string">'src/'</span>+urlInfo.pathname)</span><br><span class="line"></span><br><span class="line">        <span class="comment">//判断用户请求的资源文件是否存在</span></span><br><span class="line">        fs.stat(file,(err,info)=&gt;&#123;</span><br><span class="line">            <span class="keyword">if</span>(err)&#123;</span><br><span class="line">                <span class="comment">//文件路径不正确 响应404页面</span></span><br><span class="line">                <span class="keyword">var</span> content = tpl(__dirname+<span class="string">'/src/404.html'</span>,&#123;</span><br><span class="line">                    path:urlInfo.pathname</span><br><span class="line">                &#125;)</span><br><span class="line">                <span class="comment">//设置响应状态码和信息</span></span><br><span class="line">                res.statusCode = <span class="number">404</span></span><br><span class="line">                res.statusMessage = <span class="string">"Not Found"</span></span><br><span class="line">                <span class="comment">//设置响应头</span></span><br><span class="line">                res.setHeader(<span class="string">'Content-type'</span>,mime(<span class="string">"404.html"</span>))</span><br><span class="line">                <span class="comment">//用模板引擎 显示用户的请求路径</span></span><br><span class="line">                <span class="comment">//响应给浏览器</span></span><br><span class="line">                res.end(content)</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//读取文件内容 返回响应</span></span><br><span class="line">                <span class="keyword">var</span> content = fs.readFileSync(file)</span><br><span class="line"></span><br><span class="line">                <span class="comment">//设置对应的响应类型</span></span><br><span class="line">                res.setHeader(<span class="string">'Content-type'</span>,mime(file))</span><br><span class="line"></span><br><span class="line">                <span class="comment">//响应给浏览器即可</span></span><br><span class="line">                res.end(content)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">//请求没后缀 调用功能请求</span></span><br><span class="line">        <span class="comment">//都有可能需要使用get形式参数 post形式参数</span></span><br><span class="line">        <span class="keyword">var</span> <span class="keyword">get</span> = urlInfo.query</span><br><span class="line">        var post = ""</span><br><span class="line">        req.on('data',(data)=&gt;&#123;</span><br><span class="line">            <span class="comment">//把收到的数据片段保存到post中</span></span><br><span class="line">            post+=data</span><br><span class="line">        &#125;)</span><br><span class="line">        req.on(<span class="string">"end"</span>,()=&gt;&#123;</span><br><span class="line">            <span class="comment">//把字符串型的post数据 转换为对象</span></span><br><span class="line">            post = querystring.parse(post)</span><br><span class="line"></span><br><span class="line">            <span class="comment">//设置默认响应头</span></span><br><span class="line">            res.setHeader(<span class="string">"Content-type"</span>, mime(<span class="string">"test.html"</span>))</span><br><span class="line">            <span class="comment">///////////////////////////////////服务端逻辑//////////////////////////////////////</span></span><br><span class="line">            <span class="keyword">switch</span> (urlInfo.pathname) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"/province"</span>:</span><br><span class="line">                    <span class="comment">//请求省级数据</span></span><br><span class="line">                    <span class="keyword">var</span> province=[<span class="string">'广东省'</span>,<span class="string">'湖南省'</span>,<span class="string">'湖北省'</span>]</span><br><span class="line">                    res.end(<span class="built_in">JSON</span>.stringify(province))</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"/city"</span>:</span><br><span class="line">                    <span class="comment">// 请求市级数据</span></span><br><span class="line">                    <span class="keyword">var</span> city = []</span><br><span class="line">                    city[<span class="string">'广东省'</span>]=[<span class="string">'广州市'</span>,<span class="string">'深圳市'</span>,<span class="string">'东莞市'</span>]</span><br><span class="line">                    city[<span class="string">'湖南省'</span>]=[<span class="string">'长沙市'</span>,<span class="string">'湘潭市'</span>,<span class="string">'湘西市'</span>]</span><br><span class="line">                    city[<span class="string">'湖北省'</span>]=[<span class="string">'武汉市'</span>,<span class="string">'荆州市'</span>,<span class="string">'宜昌市'</span>]</span><br><span class="line">                    <span class="built_in">console</span>.log(<span class="built_in">JSON</span>.stringify(city[<span class="keyword">get</span>.province]))</span><br><span class="line">                    res.end(JSON.stringify(city[<span class="keyword">get</span>.province]))</span><br><span class="line">                    break;</span><br><span class="line">                default:</span><br><span class="line">                    res.end('404')</span><br><span class="line">                    break;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            ///////////////////////////////////服务端逻辑//////////////////////////////////////</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;).listen(3000)</span><br></pre></td></tr></table></figure><p>上述所用到的一个自定义模块代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//导入path核心模块</span></span><br><span class="line"><span class="keyword">var</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>)</span><br><span class="line"><span class="comment">//单个导出 mime方法 传入文件名 返回响应类型</span></span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span> <span class="title">mime</span>(<span class="params">file</span>)</span>&#123;</span><br><span class="line">    <span class="comment">//获取后缀</span></span><br><span class="line">    <span class="keyword">var</span> ext = path.extname(file)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> type=[]</span><br><span class="line">    type[<span class="string">'.html'</span>] = <span class="string">"text/html;charset=utf-8"</span></span><br><span class="line">    type[<span class="string">'.css'</span>] = <span class="string">"text/css"</span></span><br><span class="line">    type[<span class="string">'.jpg'</span>] = <span class="string">"image/jpeg"</span></span><br><span class="line">    type[<span class="string">'.ico'</span>] = <span class="string">"image/x-icon"</span></span><br><span class="line">    <span class="comment">//根据后缀返回对应响应类型</span></span><br><span class="line">    <span class="keyword">return</span> type[ext] ? type[ext] : <span class="string">"text/plain"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Ajax学习总结&quot;&gt;&lt;a href=&quot;#Ajax学习总结&quot; class=&quot;headerlink&quot; title=&quot;Ajax学习总结&quot;&gt;&lt;/a&gt;Ajax学习总结&lt;/h1&gt;&lt;p&gt;##简介&lt;/p&gt;
&lt;p&gt;​    ajax是一种保障网页数据实时性的技术，意思是数据从服务端
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://linchunliangliang.github.io/2019/04/23/Typora%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://linchunliangliang.github.io/2019/04/23/Typora学习笔记/</id>
    <published>2019-04-23T01:49:22.195Z</published>
    <updated>2019-04-23T03:12:11.484Z</updated>
    
    <content type="html"><![CDATA[<hr><h2 id="Title-Typora学习笔记"><a href="#Title-Typora学习笔记" class="headerlink" title="Title:Typora学习笔记"></a>Title:Typora学习笔记</h2><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>​    Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面。 </p><h2 id="常用的相关方法"><a href="#常用的相关方法" class="headerlink" title="常用的相关方法"></a>常用的相关方法</h2><h3 id="文本操作"><a href="#文本操作" class="headerlink" title="文本操作"></a>文本操作</h3><pre><code>文本加粗，一对**包含文本内容即可 </code></pre><p><strong>加粗文本</strong></p><pre><code>文本斜体，一个*包含文本即可</code></pre><p> <em>这是斜体</em></p><pre><code>下划线，用u标签,或者使用快捷方式，选中文本后command+u</code></pre><p> <u>下划线操作</u></p><p> 引用快捷键</p><p> option+command+q</p><p> 三个—按回车可以创建分割线</p><hr><h3 id="代码相关操作"><a href="#代码相关操作" class="headerlink" title="代码相关操作"></a>代码相关操作</h3><p> 英文状态下，三个`即可创建代码框，可以在右下角选择代码语言，</p><p>也可以输入玩三个`后，直接写相关语言</p><p><strong>快捷键option+command+c</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">         ........</span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span>   </span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="表格相关操作"><a href="#表格相关操作" class="headerlink" title="表格相关操作"></a>表格相关操作</h3><p>创建表格方法</p><p>|表头1|表头2|表头3|输入完前面内容后，按回车键即可创建表格，之后可以在表格的左上角进行相关表格的设置</p><p><strong>option+command+t 快捷键创建表格</strong></p><table><thead><tr><th style="text-align:center">表头1</th><th style="text-align:center">表头2</th><th style="text-align:center">表头3</th></tr></thead><tbody><tr><td style="text-align:center"></td><td style="text-align:center"></td></tr></tbody></table><h3 id="复选框"><a href="#复选框" class="headerlink" title="复选框"></a>复选框</h3><p><code>- []</code>未完成事件，中间的空格别忘记</p><p><code>- [x]</code>已完成事件</p><ul><li style="list-style: none"><input type="checkbox"> 未完成事件</li><li style="list-style: none"><input type="checkbox" checked> 已完成事件</li></ul><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><h4 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h4><p>输入一对中括号，后面跟一对括号，括号里面填写链接地址，即可添加超链接 快捷键command+k</p><p>这里需要<a href="https://www.baidu.com" target="_blank" rel="noopener">相关操作</a> </p><p>####链接 </p><p>尖括号包含着的就是链接 </p><p> <a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a></p><h3 id="表情"><a href="#表情" class="headerlink" title="表情"></a>表情</h3><p>英文状态下:后面跟相关表情英文即可</p><p>:happy:</p><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><p>复制后直接快捷键粘贴</p><p><img src="/Users/linchunliang/blog/source/images/image-20190423105833362.jpg" alt="image-20190423105833362"></p><h3 id="相关快捷键"><a href="#相关快捷键" class="headerlink" title="相关快捷键"></a>相关快捷键</h3><p>这里需要<strong>相关操作</strong>     command+b 加粗</p><p>这里需要<!--相关操作--> control+-  注释</p><p>单行代码shift+command+`</p><p>command+数字 可以快捷创建标题</p><p>[TOC]按回车，可以生成目录</p><p>结尾：</p><p>上面的相关操作也已经足够自己使用，如果后期get到新的会继续添加。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;h2 id=&quot;Title-Typora学习笔记&quot;&gt;&lt;a href=&quot;#Title-Typora学习笔记&quot; class=&quot;headerlink&quot; title=&quot;Title:Typora学习笔记&quot;&gt;&lt;/a&gt;Title:Typora学习笔记&lt;/h2&gt;&lt;h2 id=&quot;简介&quot;&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://linchunliangliang.github.io/2019/04/12/hello-world/"/>
    <id>https://linchunliangliang.github.io/2019/04/12/hello-world/</id>
    <published>2019-04-12T12:54:37.111Z</published>
    <updated>2019-04-12T12:54:37.111Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
